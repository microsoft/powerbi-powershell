<?xml version="1.0" encoding="utf-8"?>
<!--
***********************************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <IncludeContentInPack>false</IncludeContentInPack>
    <PackageOutputPath>$(RepoRoot)PkgOut</PackageOutputPath>
  </PropertyGroup>

  <!--
  <ItemGroup Condition="'$(IsPackable)' == 'true'">
    <PackageReference Include="platyPS" PrivateAssets="all" />
  </ItemGroup>
  -->

  <!--
  <PropertyGroup>
    <BeforePack>$(BeforePack);UpdatePSManifest;GeneratePSHelp;UpdateReleaseNotes</BeforePack>
  </PropertyGroup>
  -->

  <PropertyGroup>
    <BeforePack>$(BeforePack);UpdatePSManifest;UpdateReleaseNotes</BeforePack>
  </PropertyGroup>
  
  <Target Name="AddMoreProjectFiles" AfterTargets="_GetPackageFiles" Condition="'$(IsPackable)' == 'true'">

    <ItemGroup>
      <FilteredResolveAssemblyReferenceResolvedFiles Include="@(_ResolveAssemblyReferenceResolvedFiles)" Condition="%(_ResolveAssemblyReferenceResolvedFiles.Filename) != 'netstandard' 
            AND %(_ResolveAssemblyReferenceResolvedFiles.Filename) != 'mscorlib' 
            AND %(_ResolveAssemblyReferenceResolvedFiles.Filename) != 'Microsoft.CSharp'" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(FilteredResolveAssemblyReferenceResolvedFiles)">
      <Output TaskParameter="Filtered" ItemName="DedupResolveAssemblyReferenceResolvedFiles"/>
    </RemoveDuplicates>

    <Message Text="Locating netstandard assembly" Importance="high" />
    <Exec ConsoleToMSBuild="true" Command="&quot;$(PowerShellExe)&quot; $(PowerShellCommonArgs) -Command &quot;&amp; { &amp; &apos;$(ScriptsRoot)GetNetstandardAssembly.ps1&apos; } &quot;">
      <Output TaskParameter="ConsoleOutput" PropertyName="NetStandardDllPath" />
    </Exec>

    <ItemGroup>
      
      <_PackageFiles Include="$(OutputPath)\settings.json" Condition="Exists('$(OutputPath)\settings.json') AND '$(NoDependentAssemblies)' != 'true'">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath>lib\$(TargetFramework)</PackagePath>
      </_PackageFiles>
      
      <_PackageFiles Include="@(DedupResolveAssemblyReferenceResolvedFiles)" Condition="'$(NoDependentAssemblies)' != 'true'">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath>lib\$(TargetFramework)</PackagePath>
      </_PackageFiles>

      <_PackageFiles Include="$(NetStandardDllPath)" Condition="'$(NoDependentAssemblies)' != 'true'">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath>lib\$(TargetFramework)</PackagePath>
      </_PackageFiles>

      <_PackageFiles Include="$(OutputPath)\MSAL\netstandard2.0\*.*" Condition="Exists('$(OutputPath)\MSAL\netstandard2.0')">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath>lib\$(TargetFramework)</PackagePath>
      </_PackageFiles>

      <_PackageFiles Include="$(OutputPath)\$(LangName)\**\*.*" Condition="'$(NoHelpGen)' != 'true'">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath>$(LangName)</PackagePath>
      </_PackageFiles>
      
      <_PackageFiles Include="$(OutputPath)\$(PackageId).psd1">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath></PackagePath>
      </_PackageFiles>
      
      <_PackageFiles Include="$(OutputPath)\$(AssemblyName).types.ps1xml" Condition="Exists('$(OutputPath)\$(AssemblyName).types.ps1xml')">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath></PackagePath>
      </_PackageFiles>

      <_PackageFiles Include="$(OutputPath)\$(AssemblyName).format.ps1xml" Condition="Exists('$(OutputPath)\$(AssemblyName).format.ps1xml')">
        <BuildAction>Content</BuildAction>
        <Pack>true</Pack>
        <PackagePath></PackagePath>
      </_PackageFiles>
      
    </ItemGroup>
    
  </Target>

  
  <Target Name="GetPSModuleSettings" DependsOnTargets="RunResolvePackageDependencies" Condition="'$(IsPackable)' == 'true'">
    
    <ItemGroup>
      <PlatyPSPkg Include="@(PackageDefinitions)" Condition="'%(PackageDefinitions.Name)' == 'platyPS'" KeepMetadata="ResolvedPath" />
      <PSDFile Include="$(OutputPath)\$(PackageId).psd1" />
    </ItemGroup>

    <PropertyGroup>
      <PlatyPSPath>%(PlatyPSPkg.ResolvedPath)</PlatyPSPath>
    </PropertyGroup>

    <!--<Message Text="PlatyPS Path = $(PlatyPSPath)" Importance="high" />-->
  </Target>

  
  <Target Name="GenerateMarkdownHelp" AfterTargets="AfterBuild" DependsOnTargets="GetPSModuleSettings" Condition="'$(IsPackable)' == 'true' AND '$(NoHelpGen)' != 'true'">

    <ItemGroup>
      <PSDFileInProject Include="$(MSBuildProjectDirectory)\$(PackageId).psd1" />
    </ItemGroup>

    <!-- Ensures if packaging previously ran and updated the manifest it is reset for GenerateHelp.ps1 -GenerateMarkdown -->
    <Copy DestinationFolder="$(OutputPath)" SourceFiles="@(PSDFileInProject)" />
    
    <!--
    <Exec Command="$(PowerShellExe) $(PowerShellCommonArgs) -Command &quot;&amp; { &amp;&apos;$(ScriptsRoot)GenerateHelp.ps1&apos; -ModulePath &apos;%(PSDFile.FullPath)&apos; -PathToPlatyPS &apos;$(PlatyPSPath)&apos; -ProjectRoot &apos;$(MSBuildProjectDirectory)&apos; -Language &apos;$(LangName)&apos; -GenerateMarkdown -DependentAssemblies &apos;@(_ResolveAssemblyReferenceResolvedFiles)&apos;} &quot;" />
    -->
  </Target>

  
  <Target Name="UpdatePSManifest" DependsOnTargets="GetPSModuleSettings" Condition="'$(IsPackable)' == 'true'">

    <Exec Command="&quot;$(PowerShellExe)&quot; $(PowerShellCommonArgs) -Command &quot;&amp; { &amp;&apos;$(ScriptsRoot)UpdatePSModuleManifest.ps1&apos; -ModulePath &apos;%(PSDFile.FullPath)&apos; -TargetFramework &apos;$(TargetFramework)&apos; -Version &apos;$(PackageVersion)&apos; -ReleaseNotes &apos;$(RepoRoot)ReleaseNotes.md&apos;} &quot;" />

  </Target>
  
  <!--
  <Target Name="GeneratePSHelp" DependsOnTargets="GetPSModuleSettings" Condition="'$(IsPackable)' == 'true' AND '$(NoHelpGen)' != 'true'">
    
    <Exec Command="$(PowerShellExe) $(PowerShellCommonArgs) -Command &quot;&amp; { &amp;&apos;$(ScriptsRoot)GenerateHelp.ps1&apos; -PathToPlatyPS &apos;$(PlatyPSPath)&apos; -ProjectRoot &apos;$(MSBuildProjectDirectory)&apos; -OutputPath &apos;$(OutputPath)&apos; -GenerateExternalHelp -Language &apos;$(LangName)&apos;} &quot;" />
    
  </Target>
  -->

  <Target Name="UpdateReleaseNotes" Condition="Exists('$(RepoRoot)ReleaseNotes.md')">
    
    <ItemGroup>
      <ReleaseNotesFile Include="$(RepoRoot)ReleaseNotes.md" />
    </ItemGroup>

    <ReadLinesFromFile File="@(ReleaseNotesFile)">
      <Output TaskParameter="Lines" ItemName="ReleaseNotesFromFile" />
    </ReadLinesFromFile>
  
    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNotesFromFile, '%0A')</PackageReleaseNotes> <!-- %0A = LF (new line) -->
    </PropertyGroup>

  </Target>
  
</Project>